{"version":3,"sources":["pages/home/topbar/appicon/img/logo2.png","pages/home/topbar/button/index.tsx","pages/home/topbar/input/index.tsx","pages/home/topbar/appicon/index.tsx","graph/Graph.ts","controller/Utils.ts","graph/MapGraph.ts","controller/State.ts","controller/ImageLoader.ts","controller/StateKeeper.ts","controller/GraphController.ts","pages/home/topbar/readfile/index.tsx","pages/home/topbar/index.tsx","pages/home/sidebar/button/index.tsx","pages/home/sidebar/infofield/index.tsx","pages/home/sidebar/slidebar/index.tsx","pages/home/sidebar/slideselect/index.tsx","pages/home/sidebar/index.tsx","pages/home/graph/index.tsx","pages/home/index.tsx","pages/setupgraph/topbar/index.tsx","pages/setupgraph/bottombar/index.tsx","pages/setupgraph/middledata/input/index.tsx","pages/setupgraph/middledata/warning/index.tsx","pages/setupgraph/middledata/index.tsx","pages/setupgraph/index.tsx","pages/index.tsx","index.tsx"],"names":["module","exports","Button","this","props","icon","onClick","className","Component","Input","placeholder","onChange","value","type","spellCheck","logo","require","AppLogo","src","alt","sqrt","Math","floor","ceil","abs","INFINITY","GRAPH_MAX_SIZE","Graph","size","directed","vertices","matrix","graphSquare","Error","Uint8Array","fill","Array","i","j","from","to","length","a","b","getMatrix","Infinity","removeAdjacency","setMatrix","origin","destiny","corrente","dc","menordist","novadist","caminho","distancia","perm","k","g","route","cont","visited","getCostAdjacency","unshift","forEach","item","index","push","heuristic","data","map","name","join","cost","target","neighboors","console","table","costs","getNeighboors","neighbood","undefined","file","split","Number","match","currentLine","substr","search","graph","createVertex","createAdjacency","random","round","drawL2ListenProps","processSearchListenProps","intensity","max","min","MapGraph","param","costVerts","numberOfBlocksPerLine","numberOfBlocks","blockSize","x","y","currentSearch","graphState","searchMethod","originPath","endPath","drawL2","ctx","context","clearRect","GraphComponents","canvas","width","height","drawBlock","proccesSearch","clearL3","isSearchEnable","pathSize","pathCost","numberVisisted","drawBlocks","drawRoute","includes","reduce","acc","c","fromPajekString","getCostAdjacencys","generateRandomCosts","makeRandomGraph","refreshScreen","listen","_","nbpl","nb","cv","column","list","bs","current","strokeStyle","lineCap","lineWidth","beginPath","moveTo","lineTo","stroke","blue","green","getColor","color","layer","w","h","fillStyle","fillRect","event","offsetX","offsetY","indexFromClick","setValueForVerticeI","obstacleIntensity","fireStateListeners","graphVersionUpdate","drawAll","pajek","drawL1","drawL3","toPajekString","stopListen","res","document","createElement","getContext","Uint8ClampedArray","gray","l","img","ImageData","putImageData","toDataURL","drawingMethod","GraphState","nextSize","graphName","SearchMethod","Dijkstra","DrawingMethod","BeginPoint","oldState","emitter","EventEmitter","Proxy","set","self","prop","dispatch","all","p","emit","listener","addListener","removeListener","loadImagGraph","path","async","read","getHeight","getWidth","resize","grayscale","GraphController","resetGraph","intToRGBA","getPixelColor","r","UPDATE_TIME_MS","StateKeeper","lastBackup","Date","timout","cachePajek","lastCacheBackup","cacheTimout","checkCache","diff","getTime","window","clearTimeout","toString","elapsedTime","setTimeout","check","backup","start","stateString","graphToString","localStorage","setItem","getItem","loadGraphFile","error","JSON","parse","stringify","output","date","graphMaker","Object","assign","destruct","object","getElementById","offsetHeight","offsetWidth","stateKeeper","imagesSupported","ButtonReadFile","loadFile","files","extension","pop","ext","toUpperCase","reader","FileReader","readAsText","Promise","onload","result","readAsDataURL","id","htmlFor","getRemote","remote","TopBar","update","forceUpdate","saveFile","Blob","filename","url","URL","createObjectURL","navigator","msSaveOrOpenBlob","href","download","click","revokeObjectURL","openGitHub","open","getCurrentWindow","minimize","close","win","isFullscreen","isFullScreen","setFullScreen","buttons","key","openGraphSetup","title","e","electronWindowActions","label","InfoField","SlideBar","state","setValue","setState","inputOnKeyPress","normaliaze","inputOnValueChange","currentTarget","replace","nextProps","onKeyDown","SlideSelect","selected","clicked","onMouseMove","pageY","getBoundingClientRect","top","options","changeSelectedListeners","setClicked","setNotClicked","indexOf","optionLabels","labels","onMouseDown","onMouseUp","onMouseLeave","style","o","changeSelected","searchMethods","values","searchMethodsLabels","drawingMethods","drawingMethodsLabels","listenProps","SideBar","setSearchMethod","option","setDrawingMethod","findPath","setObstacleIntensity","Obstacle","isClicked","setClick","draw","nativeEvent","children","resizeCanvas","addEventListener","restore","Home","closeGraphSetup","BottomBar","confirm","closeSetupGraph","SquareRootInput","onBlur","normalizeSize","onKeyPress","onEnter","defaultValue","autoFocus","Warning","message","MiddleData","SetupGraph","handle","Main","isSetupVisible","setVisibleSetupGraph","getSetupGraph","preventDefault","ReactDOM","render","log","process"],"mappings":"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","file":"static/js/main.fddbd359.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.d5289957.png\";","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\ticon: string\r\n\tonClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n}\r\nexport class Button extends Component<Props> {\r\n\trender() {\r\n\t\tconst { icon, onClick } = this.props\r\n\t\treturn (\r\n\t\t\t<span className='notranslate topbar-icon' onClick={onClick}>\r\n\t\t\t\t<i className='topbar-icon-i'>{icon}</i>\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\tplaceholder: string\r\n\tvalue: string\r\n\tonChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nexport class Input extends Component<Props> {\r\n\trender() {\r\n\t\tconst { placeholder, onChange, value } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='topbar-input-container'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='topbar-input'\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nconst logo = require('./img/logo2.png')\r\n\r\nexport class AppLogo extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='logo'>\r\n\t\t\t\t<img src={logo} alt='logo' />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","const { sqrt, floor, ceil, abs } = Math\r\n\r\nexport const INFINITY = 255\r\nexport const GRAPH_MAX_SIZE = 2 ** 30\r\n\r\nexport class Graph {\r\n\tprivate vertices: string[]\r\n\tprivate matrix: Uint8Array\r\n\r\n\tconstructor(public readonly size: number, private directed = true) {\r\n\t\tconst graphSquare = size ** 2\r\n\t\tif (graphSquare > GRAPH_MAX_SIZE) throw new Error('Size for a Graph not allowed!')\r\n\t\tthis.matrix = new Uint8Array(graphSquare).fill(INFINITY)\r\n\t\tthis.vertices = new Array(size).fill('')\r\n\t}\r\n\tstatic fromPajekString(file: string) {\r\n\t\tconst data = file.split('\\n')\r\n\t\tconst size = Number((data[0].match(/\\d+/) || [0])[0])\r\n\t\tconst vertices = [] as string[]\r\n\t\tlet currentLine = 1\r\n\t\tfor (; currentLine < data.length; ++currentLine) {\r\n\t\t\tif (data[currentLine] === '') continue\r\n\t\t\tif (data[currentLine][0] === '*') break\r\n\t\t\tconst index = Number((data[currentLine].match(/^\\d+/g) || [0])[0]) - 1\r\n\t\t\tlet name = (data[currentLine].match(/\".*\"/g) || [''])[0].substr(1, -2)\r\n\t\t\tvertices[index] = name\r\n\t\t}\r\n\t\tlet directed: boolean\r\n\t\tif (data[currentLine].search(/Arcs/) !== -1) directed = true\r\n\t\telse if (data[currentLine].search(/Edges/) !== -1) directed = false\r\n\t\telse throw new Error('Propriedade do arquivo nao compreendida.')\r\n\t\tconst graph = new Graph(size, directed)\r\n\t\tfor (let i = 0; i < size; ++i) {\r\n\t\t\tgraph.createVertex(i, vertices[i] || '')\r\n\t\t}\r\n\t\tfor (currentLine++; currentLine < data.length; ++currentLine) {\r\n\t\t\tif (data[currentLine] === '') continue\r\n\t\t\tconst [from, to, value] = data[currentLine].split(' ').map(Number)\r\n\t\t\tif (from === undefined || to === undefined || value === undefined) {\r\n\t\t\t\tthrow new Error(`Pajek edges can't be parsed! ${[from, to, value]}`)\r\n\t\t\t}\r\n\t\t\tgraph.createAdjacency(from - 1, to - 1, value)\r\n\t\t}\r\n\t\treturn graph\r\n\t}\r\n\tprivate setMatrix(i: number, j: number, value: number) {\r\n\t\tthis.matrix[this.size * i + j] = value\r\n\t}\r\n\tprivate getMatrix(i: number, j: number) {\r\n\t\treturn this.matrix[this.size * i + j]\r\n\t}\r\n\tprivate heuristic(from: number, to: number) {\r\n\t\t//Manhattan distance on a square grid\r\n\t\t//Specific to a map structure\r\n\t\tlet length = ceil(sqrt(this.size))\r\n\t\tlet a = { x: from % length, y: floor(from / length) }\r\n\t\tlet b = { x: to % length, y: floor(to / length) }\r\n\t\treturn abs(a.x - b.x) + abs(a.y - b.y)\r\n\t}\r\n\tprivate getCostAdjacency(from: number, to: number) {\r\n\t\tconst value = this.getMatrix(from, to)\r\n\t\t// if (value === undefined) {\r\n\t\t// \tdebugger\r\n\t\t// \tthrow new Error(`Index out of bounds! from: ${from} to: ${to} size: ${this.size}`)\r\n\t\t// }\r\n\t\treturn value === INFINITY ? Infinity : value\r\n\t}\r\n\tcreateAdjacency(from: number, to: number, value: number) {\r\n\t\tif (value === Infinity || value > INFINITY || value < 0) {\r\n\t\t\tthis.removeAdjacency(from, to)\r\n\t\t} else {\r\n\t\t\tthis.setMatrix(from, to, value)\r\n\t\t\tif (!this.directed) {\r\n\t\t\t\tthis.setMatrix(to, from, value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate removeAdjacency(from: number, to: number) {\r\n\t\tthis.setMatrix(from, to, INFINITY)\r\n\t\tif (this.directed) {\r\n\t\t\tthis.setMatrix(to, from, INFINITY)\r\n\t\t}\r\n\t}\r\n\tdijkstra(origin: number, destiny: number) {\r\n\t\tlet MEMBRO = true\r\n\t\tlet NAOMEMBRO = false\r\n\t\tlet caminho = [] as number[]\r\n\t\tlet distancia = [] as number[]\r\n\t\tlet perm = [] as boolean[]\r\n\t\tlet corrente,\r\n\t\t\tk = origin,\r\n\t\t\tdc\r\n\t\tlet menordist, novadist\r\n\t\t//Variaveis de tratamento\r\n\t\tlet g = destiny,\r\n\t\t\troute = [destiny],\r\n\t\t\tcont = 0,\r\n\t\t\tvisited = [] as number[]\r\n\t\t//inicialização\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tperm[i] = NAOMEMBRO\r\n\t\t\tdistancia[i] = Infinity\r\n\t\t\tcaminho[i] = -1\r\n\t\t}\r\n\t\tperm[origin] = MEMBRO\r\n\t\tdistancia[origin] = 0\r\n\t\tcorrente = origin\r\n\t\twhile (corrente !== destiny) {\r\n\t\t\tmenordist = Infinity\r\n\t\t\tdc = distancia[corrente]\r\n\t\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\t\tif (!perm[i]) {\r\n\t\t\t\t\tnovadist = dc + this.getCostAdjacency(corrente, i)\r\n\t\t\t\t\tif (novadist < distancia[i]) {\r\n\t\t\t\t\t\tdistancia[i] = novadist\r\n\t\t\t\t\t\tcaminho[i] = corrente\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (distancia[i] < menordist) {\r\n\t\t\t\t\t\tmenordist = distancia[i]\r\n\t\t\t\t\t\tk = i\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (corrente === k) {\r\n\t\t\t\t//Busca impossivel\r\n\t\t\t\troute = []\r\n\t\t\t\tg = origin\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcorrente = k\r\n\t\t\tperm[corrente] = MEMBRO\r\n\t\t}\r\n\t\t//Tratando resultados\r\n\t\twhile (g !== origin && cont < this.size) {\r\n\t\t\troute.unshift(caminho[g])\r\n\t\t\tg = caminho[g]\r\n\t\t\tcont++\r\n\t\t}\r\n\t\tperm.forEach((item, index) => {\r\n\t\t\tif (item) visited.push(index)\r\n\t\t})\r\n\t\treturn { route, visited }\r\n\t}\r\n\tbreadth(origin: number, destiny: number) {\r\n\t\tif (origin < 0 || destiny >= this.size) throw new Error('Unsupported values')\r\n\t\tlet MEMBRO = true\r\n\t\tlet NAOMEMBRO = false\r\n\t\tlet caminho = []\r\n\t\tlet distancia = []\r\n\t\tlet perm = []\r\n\t\tlet corrente,\r\n\t\t\tk = origin,\r\n\t\t\tdc\r\n\t\tlet menordist, novadist\r\n\t\t//Variaveis de tratamento\r\n\t\tlet g = destiny,\r\n\t\t\troute = [destiny],\r\n\t\t\tcont = 0,\r\n\t\t\tvisited = [] as number[]\r\n\t\t//inicialização\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tperm[i] = NAOMEMBRO\r\n\t\t\tdistancia[i] = Infinity\r\n\t\t\tcaminho[i] = -1\r\n\t\t}\r\n\t\tperm[origin] = MEMBRO\r\n\t\tdistancia[origin] = 0\r\n\t\tcorrente = origin\r\n\t\twhile (corrente !== destiny) {\r\n\t\t\tmenordist = Infinity\r\n\t\t\tdc = distancia[corrente]\r\n\t\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\t\tif (!perm[i]) {\r\n\t\t\t\t\tnovadist = dc + (this.getCostAdjacency(corrente, i) === Infinity ? Infinity : 1)\r\n\t\t\t\t\tif (novadist < distancia[i]) {\r\n\t\t\t\t\t\tdistancia[i] = novadist\r\n\t\t\t\t\t\tcaminho[i] = corrente\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (distancia[i] < menordist) {\r\n\t\t\t\t\t\tmenordist = distancia[i]\r\n\t\t\t\t\t\tk = i\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (corrente === k) {\r\n\t\t\t\t//Busca impossivel\r\n\t\t\t\troute = []\r\n\t\t\t\tg = origin\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcorrente = k\r\n\t\t\tperm[corrente] = MEMBRO\r\n\t\t}\r\n\t\t//Tratando resultados\r\n\t\twhile (g !== origin && cont < this.size) {\r\n\t\t\troute.unshift(caminho[g])\r\n\t\t\tg = caminho[g]\r\n\t\t\tcont++\r\n\t\t}\r\n\t\tperm.forEach((item, index) => {\r\n\t\t\tif (item) visited.push(index)\r\n\t\t})\r\n\t\treturn { route, visited }\r\n\t}\r\n\tgreedy(origin: number, destiny: number) {\r\n\t\tif (origin < 0 || destiny >= this.size) throw new Error('Unsupported values')\r\n\t\tlet MEMBRO = true\r\n\t\tlet NAOMEMBRO = false\r\n\t\tlet caminho = []\r\n\t\tlet distancia = []\r\n\t\tlet perm = []\r\n\t\tlet corrente,\r\n\t\t\tk = origin\r\n\t\tlet menordist, novadist\r\n\t\t//Variaveis de tratamento\r\n\t\tlet g = destiny,\r\n\t\t\troute = [destiny],\r\n\t\t\tcont = 0,\r\n\t\t\tvisited = [] as number[]\r\n\t\t//inicialização\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tperm[i] = NAOMEMBRO\r\n\t\t\tdistancia[i] = Infinity\r\n\t\t\tcaminho[i] = -1\r\n\t\t}\r\n\t\tperm[origin] = MEMBRO\r\n\t\tdistancia[origin] = this.heuristic(origin, destiny)\r\n\t\tcorrente = origin\r\n\t\twhile (corrente !== destiny) {\r\n\t\t\tmenordist = Infinity\r\n\t\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\t\tif (!perm[i]) {\r\n\t\t\t\t\tnovadist =\r\n\t\t\t\t\t\tthis.getCostAdjacency(corrente, i) === Infinity\r\n\t\t\t\t\t\t\t? Infinity\r\n\t\t\t\t\t\t\t: this.heuristic(i, destiny)\r\n\t\t\t\t\tif (novadist < distancia[i]) {\r\n\t\t\t\t\t\tdistancia[i] = novadist\r\n\t\t\t\t\t\tcaminho[i] = corrente\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (distancia[i] < menordist) {\r\n\t\t\t\t\t\tmenordist = distancia[i]\r\n\t\t\t\t\t\tk = i\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (corrente === k) {\r\n\t\t\t\t//Busca impossivel\r\n\t\t\t\troute = []\r\n\t\t\t\tg = origin\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcorrente = k\r\n\t\t\tperm[corrente] = MEMBRO\r\n\t\t}\r\n\t\t//Tratando resultados\r\n\t\twhile (g !== origin && cont < this.size) {\r\n\t\t\troute.unshift(caminho[g])\r\n\t\t\tg = caminho[g]\r\n\t\t\tcont++\r\n\t\t}\r\n\t\tperm.forEach((item, index) => {\r\n\t\t\tif (item) visited.push(index)\r\n\t\t})\r\n\t\treturn { route, visited }\r\n\t}\r\n\tastar(origin: number, destiny: number) {\r\n\t\tif (origin < 0 || destiny >= this.size) throw new Error('Unsupported values')\r\n\t\tlet MEMBRO = true\r\n\t\tlet NAOMEMBRO = false\r\n\t\tlet caminho = []\r\n\t\tlet distancia = []\r\n\t\tlet perm = []\r\n\t\tlet corrente,\r\n\t\t\tk = origin,\r\n\t\t\tdc\r\n\t\tlet menordist, novadist\r\n\t\t//Variaveis de tratamento\r\n\t\tlet g = destiny,\r\n\t\t\troute = [destiny],\r\n\t\t\tcont = 0,\r\n\t\t\tvisited = [] as number[]\r\n\t\t//inicialização\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tperm[i] = NAOMEMBRO\r\n\t\t\tdistancia[i] = Infinity\r\n\t\t\tcaminho[i] = -1\r\n\t\t}\r\n\t\tperm[origin] = MEMBRO\r\n\t\tdistancia[origin] = 0\r\n\t\tcorrente = origin\r\n\t\twhile (corrente !== destiny) {\r\n\t\t\tmenordist = Infinity\r\n\t\t\tdc = distancia[corrente]\r\n\t\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\t\tif (!perm[i]) {\r\n\t\t\t\t\tnovadist = dc + this.getCostAdjacency(corrente, i) + this.heuristic(i, destiny)\r\n\t\t\t\t\tif (novadist < distancia[i]) {\r\n\t\t\t\t\t\tdistancia[i] = novadist\r\n\t\t\t\t\t\tcaminho[i] = corrente\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (distancia[i] < menordist) {\r\n\t\t\t\t\t\tmenordist = distancia[i]\r\n\t\t\t\t\t\tk = i\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (corrente === k) {\r\n\t\t\t\t//Busca impossivel\r\n\t\t\t\troute = []\r\n\t\t\t\tg = origin\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcorrente = k\r\n\t\t\tperm[corrente] = MEMBRO\r\n\t\t}\r\n\t\t//Tratando resultados\r\n\t\twhile (g !== origin && cont < this.size) {\r\n\t\t\troute.unshift(caminho[g])\r\n\t\t\tg = caminho[g]\r\n\t\t\tcont++\r\n\t\t}\r\n\t\tperm.forEach((item, index) => {\r\n\t\t\tif (item) visited.push(index)\r\n\t\t})\r\n\t\treturn { route, visited }\r\n\t}\r\n\ttoPajekString() {\r\n\t\tconst { size } = this\r\n\t\tlet data = `*Vertices  ${size}\\n`\r\n\t\tdata += this.vertices.map((name, i) => `${i + 1} \"${name}\"\\n`).join('')\r\n\t\tif (this.directed) {\r\n\t\t\tdata += '*Arcs \\n'\r\n\t\t\tfor (let i = 0; i < size; ++i) {\r\n\t\t\t\tfor (let j = 0; j < size; ++j) {\r\n\t\t\t\t\tconst cost = this.getCostAdjacency(i, j)\r\n\t\t\t\t\tif (cost !== Infinity) {\r\n\t\t\t\t\t\tdata += `${i + 1} ${j + 1} ${cost}\\n`\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdata += '*Edges \\n'\r\n\t\t\tfor (let i = 0; i < size; ++i) {\r\n\t\t\t\tfor (let j = i; j < size; ++j) {\r\n\t\t\t\t\tconst cost = this.getCostAdjacency(i, j)\r\n\t\t\t\t\tif (cost !== Infinity) {\r\n\t\t\t\t\t\tdata += `${i + 1} ${j + 1} ${cost}\\n`\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\tcreateVertex(index: number, name: string) {\r\n\t\tthis.vertices[index] = name\r\n\t}\r\n\tgetNeighboors(target: number) {\r\n\t\tconst neighboors = [] as number[]\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tif (i !== target && this.getCostAdjacency(i, target) !== Infinity) {\r\n\t\t\t\tneighboors.push(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn neighboors\r\n\t}\r\n\tprintAdjacencys() {\r\n\t\tlet data = [] as number[][]\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tdata[i] = []\r\n\t\t\tfor (let j = 0; j < this.size; ++j) {\r\n\t\t\t\tdata[i][j] = this.getCostAdjacency(i, j)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.table(data)\r\n\t}\r\n\tgetCostAdjacencys() {\r\n\t\tconst costs = new Uint8Array(this.size).fill(INFINITY)\r\n\t\tfor (let i = 0; i < this.size; ++i) {\r\n\t\t\tconst [neighbood] = this.getNeighboors(i)\r\n\t\t\tif (neighbood === undefined) continue\r\n\t\t\tcosts[i] = this.getCostAdjacency(neighbood, i)\r\n\t\t}\r\n\t\treturn costs\r\n\t}\r\n}\r\n","export function log(message: string) {\r\n\t// console.log(message)\r\n}\r\n\r\nexport const isInBrowser = true\r\n","import { Graph, INFINITY } from './Graph'\r\nimport { graphState, GraphComponents } from '../controller/GraphController'\r\nimport { log } from '../controller/Utils'\r\nimport { GraphState } from '../controller/State'\r\n\r\nconst { floor, random, round, ceil, sqrt } = Math\r\n\r\nconst drawL2ListenProps: (keyof GraphState)[] = ['originPath', 'endPath']\r\nconst processSearchListenProps: (keyof GraphState)[] = [\r\n\t'originPath',\r\n\t'endPath',\r\n\t'isSearchEnable',\r\n\t'searchMethod',\r\n]\r\nexport const intensity = {\r\n\tmax: INFINITY,\r\n\tmin: 0,\r\n}\r\n\r\nexport class MapGraph {\r\n\tprivate graph: Graph\r\n\tprivate costVerts: Uint8Array\r\n\tprivate numberOfBlocksPerLine: number\r\n\tprivate numberOfBlocks: number\r\n\tprivate blockSize = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t}\r\n\r\n\tconstructor(numberOfBlocks: number)\r\n\tconstructor(pajek: string)\r\n\tconstructor(param: number | string) {\r\n\t\tif (typeof param === 'string') {\r\n\t\t\tthis.graph = Graph.fromPajekString(param)\r\n\t\t\tthis.numberOfBlocks = this.graph.size\r\n\t\t\tthis.costVerts = this.graph.getCostAdjacencys()\r\n\t\t\tthis.numberOfBlocksPerLine = ceil(sqrt(this.numberOfBlocks))\r\n\t\t} else {\r\n\t\t\tthis.numberOfBlocks = param\r\n\t\t\tthis.graph = new Graph(param, true)\r\n\t\t\tthis.costVerts = this.generateRandomCosts()\r\n\t\t\tthis.numberOfBlocksPerLine = ceil(sqrt(param))\r\n\t\t\tthis.makeRandomGraph()\r\n\t\t}\r\n\t\tthis.refreshScreen()\r\n\t\tthis.proccesSearch()\r\n\t\tgraphState.listen(this.proccesSearch, processSearchListenProps)\r\n\t\tgraphState.listen(this.drawL2, drawL2ListenProps)\r\n\t}\r\n\tget context() {\r\n\t\treturn GraphComponents.ctx\r\n\t}\r\n\tget currentDrawing() {\r\n\t\treturn this[graphState.drawingMethod]\r\n\t}\r\n\tprivate generateRandomCosts() {\r\n\t\tconst costs = new Uint8Array(this.numberOfBlocks)\r\n\t\tcosts.forEach((_, i) => (costs[i] = floor(random() * (intensity.max - 1) + 1)))\r\n\t\treturn costs\r\n\t}\r\n\tprivate makeRandomGraph() {\r\n\t\tconst { numberOfBlocksPerLine: nbpl, numberOfBlocks: nb, costVerts: cv, graph: g } = this\r\n\t\tfor (let i = 0; i < nbpl; i++) {\r\n\t\t\tconst column = i % nbpl\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = nbpl; i < nb - nbpl; i++) {\r\n\t\t\tconst column = i % nbpl\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i + nbpl, cv[i + nbpl])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = nb - nbpl; i < nb; i++) {\r\n\t\t\tconst column = i % nbpl\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i, i + 1, cv[i + 1])\r\n\t\t\t\tg.createAdjacency(i, i - 1, cv[i - 1])\r\n\t\t\t\tg.createAdjacency(i, i - nbpl, cv[i - nbpl])\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate currentSearch = () => {\r\n\t\treturn this.graph[graphState.searchMethod](graphState.originPath, graphState.endPath)\r\n\t}\r\n\tprivate drawBlocks(list: number[]) {\r\n\t\tlist.forEach(index => this.drawBlock(index, 'rgba(0,0,0,0.5)', 2))\r\n\t}\r\n\tprivate drawRoute(list: number[]) {\r\n\t\tconst { numberOfBlocksPerLine: nbpl, blockSize: bs } = this\r\n\t\tlet current = {\r\n\t\t\tx: (list[0] % nbpl) * bs.x + bs.x / 2,\r\n\t\t\ty: floor(list[0] / nbpl) * bs.y + bs.y / 2,\r\n\t\t}\r\n\t\tconst ctx = this.context[2]\r\n\t\tctx.strokeStyle = 'white'\r\n\t\tctx.lineCap = 'round'\r\n\t\tctx.lineWidth = bs.x / 4\r\n\t\tctx.beginPath()\r\n\t\tctx.moveTo(current.x, current.y)\r\n\t\tfor (const i of list) {\r\n\t\t\tcurrent = {\r\n\t\t\t\tx: (i % nbpl) * bs.x + bs.x / 2,\r\n\t\t\t\ty: floor(i / nbpl) * bs.y + bs.y / 2,\r\n\t\t\t}\r\n\t\t\tctx.lineTo(current.x, current.y)\r\n\t\t}\r\n\t\tctx.stroke()\r\n\t}\r\n\tprivate getColor(i: number) {\r\n\t\tconst { max } = intensity\r\n\t\tconst cost = this.costVerts[i]\r\n\t\tif (cost === max) return 'rgb(37, 40, 57)'\r\n\t\tconst blue = max - cost\r\n\t\tconst green = round(0.68 * blue) + 173\r\n\t\treturn `rgb(255, ${green}, ${blue})`\r\n\t}\r\n\tprivate drawL1() {\r\n\t\tconst [ctx] = this.context\r\n\t\tif (!ctx) return\r\n\t\tctx.clearRect(0, 0, GraphComponents.canvas[0].width, GraphComponents.canvas[0].height)\r\n\t\tfor (let i = 0; i < this.numberOfBlocks; ++i) {\r\n\t\t\tthis.drawBlock(i, this.getColor(i), 0)\r\n\t\t}\r\n\t}\r\n\tprivate drawL2 = () => {\r\n\t\tconst ctx = this.context[1]\r\n\t\tif (!ctx) return\r\n\t\tctx.clearRect(0, 0, GraphComponents.canvas[1].width, GraphComponents.canvas[1].height)\r\n\t\tthis.drawBlock(graphState.originPath, 'LawnGreen', 1)\r\n\t\tthis.drawBlock(graphState.endPath, 'DodgerBlue', 1)\r\n\t}\r\n\tprivate drawL3() {\r\n\t\tconst ctx = this.context[2]\r\n\t\tif (!ctx) return\r\n\t\tconst { width, height } = GraphComponents.canvas[2]\r\n\t\tctx.clearRect(0, 0, width, height)\r\n\t}\r\n\tprivate clearL3() {\r\n\t\tthis.context[2].clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tGraphComponents.canvas[0].width,\r\n\t\t\tGraphComponents.canvas[0].height,\r\n\t\t)\r\n\t}\r\n\tprivate drawBlock(index: number, color: string, layer: number) {\r\n\t\tconst origin = {\r\n\t\t\tx: (index % this.numberOfBlocksPerLine) * this.blockSize.x,\r\n\t\t\ty: floor(index / this.numberOfBlocksPerLine) * this.blockSize.y,\r\n\t\t}\r\n\t\tconst x = this.blockSize.x * 0.05 + origin.x\r\n\t\tconst y = this.blockSize.y * 0.05 + origin.y\r\n\t\tconst w = this.blockSize.x * 0.9\r\n\t\tconst h = this.blockSize.y * 0.9\r\n\t\tthis.context[layer].fillStyle = color\r\n\t\tthis.context[layer].fillRect(x, y, w, h)\r\n\t}\r\n\tprivate indexFromClick(event: MouseEvent) {\r\n\t\treturn (\r\n\t\t\tfloor(event.offsetX / this.blockSize.x) +\r\n\t\t\tfloor(event.offsetY / this.blockSize.y) * this.numberOfBlocksPerLine\r\n\t\t)\r\n\t}\r\n\tprivate setBeginPoint(event: MouseEvent) {\r\n\t\tgraphState.originPath = this.indexFromClick(event)\r\n\t}\r\n\tprivate setDestinationPoint(event: MouseEvent) {\r\n\t\tgraphState.endPath = this.indexFromClick(event)\r\n\t}\r\n\tprivate proccesSearch = () => {\r\n\t\tthis.clearL3()\r\n\t\tif (!graphState.isSearchEnable) {\r\n\t\t\tgraphState.pathSize = -1\r\n\t\t\tgraphState.pathCost = -1\r\n\t\t\tgraphState.numberVisisted = -1\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlog('!! Searching...')\r\n\t\tconst { route, visited } = this.currentSearch()\r\n\t\tthis.drawBlocks(visited)\r\n\t\tthis.drawRoute(route)\r\n\t\tif (route.length === 0 || route.includes(INFINITY)) {\r\n\t\t\tgraphState.pathCost = -1\r\n\t\t\tgraphState.pathSize = -1\r\n\t\t} else {\r\n\t\t\tgraphState.pathCost = route.reduce((acc, c) => acc + this.costVerts[c], 0)\r\n\t\t\tgraphState.pathSize = route.length\r\n\t\t}\r\n\t\tgraphState.numberVisisted = visited.length\r\n\t}\r\n\tsetValueForVertice(event: MouseEvent) {\r\n\t\tthis.setValueForVerticeI(this.indexFromClick(event), graphState.obstacleIntensity)\r\n\t}\r\n\tsetValueForVerticeI(i: number, value: number, fireStateListeners = true) {\r\n\t\tconst { numberOfBlocksPerLine: nbpl, numberOfBlocks: nb, costVerts: cv, graph: g } = this\r\n\t\tconst column = i % nbpl\r\n\t\tcv[i] = value\r\n\t\tif (i >= nbpl && i < nb - nbpl) {\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t}\r\n\t\t} else if (i < nbpl) {\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i + nbpl, i, cv[i])\r\n\t\t\t}\r\n\t\t} else if (i >= nb - nbpl) {\r\n\t\t\tif (column === 0) {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t} else if (column === nbpl - 1) {\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t} else {\r\n\t\t\t\tg.createAdjacency(i + 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - 1, i, cv[i])\r\n\t\t\t\tg.createAdjacency(i - nbpl, i, cv[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.drawBlock(i, this.getColor(i), 0)\r\n\t\tthis.proccesSearch()\r\n\t\tif (fireStateListeners) graphState.graphVersionUpdate++\r\n\t}\r\n\trefreshScreen() {\r\n\t\tconst [canvas] = GraphComponents.canvas\r\n\t\tif (!canvas) return\r\n\t\tthis.blockSize = {\r\n\t\t\tx: canvas.width / this.numberOfBlocksPerLine,\r\n\t\t\ty: canvas.height / this.numberOfBlocksPerLine,\r\n\t\t}\r\n\t\tthis.drawAll()\r\n\t}\r\n\tloadFromPajek(pajek: string) {\r\n\t\tthis.graph = Graph.fromPajekString(pajek)\r\n\t\tthis.numberOfBlocks = this.graph.size\r\n\t\tthis.numberOfBlocksPerLine = ceil(sqrt(this.numberOfBlocks))\r\n\t\tthis.costVerts = this.graph.getCostAdjacencys()\r\n\t\tthis.drawAll()\r\n\t}\r\n\tdrawAll() {\r\n\t\tthis.drawL1()\r\n\t\tthis.drawL2()\r\n\t\tthis.drawL3()\r\n\t}\r\n\ttoString() {\r\n\t\treturn this.graph.toPajekString()\r\n\t}\r\n\tdestruct() {\r\n\t\tdelete this.graph\r\n\t\tgraphState.stopListen(this.proccesSearch, processSearchListenProps)\r\n\t\tgraphState.stopListen(this.drawL2, drawL2ListenProps)\r\n\t}\r\n\ttoImageString() {\r\n\t\tconst res = Math.sqrt(this.numberOfBlocks)\r\n\t\tconst canvas = document.createElement('canvas')!\r\n\t\tconst ctx = canvas.getContext('2d')!\r\n\t\tconst data = new Uint8ClampedArray(this.costVerts.length * 4)\r\n\t\tthis.costVerts.forEach((gray, index) => {\r\n\t\t\tconst i = index * 4\r\n\t\t\tconst l = i + 3\r\n\t\t\tdata.fill(255 - gray, i, l)\r\n\t\t\tdata[l] = 255\r\n\t\t})\r\n\t\tconst img = new ImageData(data, res, res)\r\n\t\tctx.canvas.height = res\r\n\t\tctx.canvas.width = res\r\n\t\tctx.putImageData(img, 0, 0)\r\n\t\treturn canvas.toDataURL()\r\n\t}\r\n}\r\n","import { EventEmitter } from 'events'\r\nimport { SearchMethod, DrawingMethod } from './GraphController'\r\nimport { log } from './Utils'\r\n\r\nclass State<T extends State<T>> {\r\n\tprivate readonly emitter: EventEmitter\r\n\r\n\tconstructor(oldState?: State<T>) {\r\n\t\tthis.emitter = oldState?.emitter || new EventEmitter()\r\n\t\treturn new Proxy(this, { set: this.set as any })\r\n\t}\r\n\tprivate set(self: T, prop: keyof T, value: any) {\r\n\t\tif (self[prop] === value) return true\r\n\t\tself[prop] = value\r\n\t\tlog(`[] ${prop}: ${value}`)\r\n\t\tself.dispatch([...self.all, prop])\r\n\t\treturn true\r\n\t}\r\n\tprivate get all() {\r\n\t\treturn ['*' as keyof T]\r\n\t}\r\n\tprivate dispatch(props = this.all) {\r\n\t\tprops.forEach(p => this.emitter.emit(p as string))\r\n\t}\r\n\tlisten(listener: () => void, props = this.all) {\r\n\t\tprops.forEach(p => this.emitter.addListener(p as string, listener))\r\n\t}\r\n\tstopListen(listener: () => void, props = this.all) {\r\n\t\tprops.forEach(p => this.emitter.removeListener(p as string, listener))\r\n\t}\r\n}\r\nexport class GraphState extends State<GraphState> {\r\n\t/** Saves the size of a graph that will be created */\r\n\tnextSize = 1024\r\n\tobstacleIntensity = 0\r\n\tgraphName = ''\r\n\tsearchMethod = SearchMethod.Dijkstra\r\n\tdrawingMethod = DrawingMethod.BeginPoint\r\n\toriginPath = 0\r\n\tisSearchEnable = false\r\n\tpathSize = 0\r\n\tpathCost = 0\r\n\tnumberVisisted = 0\r\n\t/** Change every time graph sctructure has some update */\r\n\tgraphVersionUpdate = 0\r\n\r\n\tconstructor(public endPath = 9, graphState?: State<GraphState>) {\r\n\t\tsuper(graphState)\r\n\t}\r\n}\r\n","import { read, intToRGBA } from 'jimp'\r\nimport { graphState, GraphController } from './GraphController'\r\n\r\nexport async function loadImagGraph(path: string) {\r\n\tlet img = await read(path)\r\n\tconst size = Math.min(img.getHeight(), img.getWidth(), 50)\r\n\timg.resize(size, size).grayscale()\r\n\tgraphState.nextSize = size ** 2\r\n\tGraphController.resetGraph()\r\n\tlet index = 0\r\n\tfor (let i = 0; i < size; ++i) {\r\n\t\tfor (let j = 0; j < size; ++j) {\r\n\t\t\tconst { r } = intToRGBA(img.getPixelColor(j, i))\r\n\t\t\tGraphController.map.setValueForVerticeI(index++, 255 - r, false)\r\n\t\t}\r\n\t}\r\n}\r\n","import { GraphController, graphState, GraphMakerJSONStructure } from './GraphController'\r\nimport { log } from './Utils'\r\nimport { loadImagGraph } from './ImageLoader'\r\n\r\nconst UPDATE_TIME_MS = 1000\r\nconst LOCALSTORAGE_PATH = 'GraphMakerState'\r\n\r\nexport class StateKeeper {\r\n\tlastBackup = new Date()\r\n\ttimout = 0\r\n\r\n\tcachePajek!: string\r\n\tlastCacheBackup = new Date()\r\n\tcacheTimout = 0\r\n\r\n\tconstructor() {\r\n\t\tgraphState.listen(this.checkCache, ['graphVersionUpdate'])\r\n\t\tgraphState.listen(this.check)\r\n\t}\r\n\tcheckCache = () => {\r\n\t\tconst { map } = GraphController\r\n\t\tif (!map) return\r\n\t\tconst diff = new Date().getTime() - this.lastCacheBackup.getTime()\r\n\t\twindow.clearTimeout(this.cacheTimout)\r\n\t\tif (diff > UPDATE_TIME_MS && map) {\r\n\t\t\tthis.lastCacheBackup = new Date()\r\n\t\t\tthis.cachePajek = map.toString()\r\n\t\t\tconst elapsedTime = new Date().getTime() - this.lastCacheBackup.getTime()\r\n\t\t\tlog(`-> Cache backup was made in ${elapsedTime}ms`)\r\n\t\t} else {\r\n\t\t\tthis.cacheTimout = window.setTimeout(this.checkCache, UPDATE_TIME_MS)\r\n\t\t}\r\n\t}\r\n\tcheck = () => {\r\n\t\tconst diff = new Date().getTime() - this.lastBackup.getTime()\r\n\t\twindow.clearTimeout(this.timout)\r\n\t\tif (diff > UPDATE_TIME_MS) {\r\n\t\t\tthis.backup()\r\n\t\t} else {\r\n\t\t\tthis.timout = window.setTimeout(this.check, UPDATE_TIME_MS)\r\n\t\t}\r\n\t}\r\n\tbackup() {\r\n\t\tif (!this.cachePajek) return\r\n\t\tconst start = new Date()\r\n\t\tconst stateString = this.graphToString()\r\n\t\tlocalStorage.setItem(LOCALSTORAGE_PATH, stateString)\r\n\t\tthis.lastBackup = new Date()\r\n\t\tconst elapsedTime = this.lastBackup.getTime() - start.getTime()\r\n\t\tlog(`-> Backup was made in ${elapsedTime}ms`)\r\n\t}\r\n\tasync restore(): Promise<boolean> {\r\n\t\ttry {\r\n\t\t\tconst start = new Date()\r\n\t\t\tlet stateString = localStorage.getItem(LOCALSTORAGE_PATH)\r\n\t\t\tif (!stateString) {\r\n\t\t\t\tawait loadImagGraph('smile.png')\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tGraphController.loadGraphFile(stateString)\r\n\t\t\tconst elapsedTime = new Date().getTime() - start.getTime()\r\n\t\t\tlog(`<- Restore was made in ${elapsedTime}ms`)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err)\r\n\t\t\treturn false\r\n\t\t} finally {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\tgraphToString() {\r\n\t\tconst data = JSON.parse(JSON.stringify(graphState))\r\n\t\tdelete data.emitter\r\n\t\tconst output: GraphMakerJSONStructure = {\r\n\t\t\tgraphState: data,\r\n\t\t\tpajek: this.cachePajek,\r\n\t\t\tdate: new Date(),\r\n\t\t}\r\n\t\treturn JSON.stringify(output)\r\n\t}\r\n}\r\n","import { MapGraph } from '../graph/MapGraph'\r\nimport { GraphState } from './State'\r\nimport { StateKeeper } from './StateKeeper'\r\n\r\nexport enum SearchMethod {\r\n\tDijkstra = 'dijkstra',\r\n\tBreadthFirstSearch = 'breadth',\r\n\tGreedyFirstSearch = 'greedy',\r\n\tAStart = 'astar',\r\n}\r\nexport enum DrawingMethod {\r\n\tBeginPoint = 'setBeginPoint',\r\n\tDestinyPoint = 'setDestinationPoint',\r\n\tObstacle = 'setValueForVertice',\r\n}\r\nexport interface GraphMakerJSONStructure {\r\n\tgraphState: GraphState\r\n\tpajek: string\r\n\tdate: Date\r\n}\r\n\r\nexport let graphState = new GraphState()\r\n\r\nexport class GraphController {\r\n\tstatic map: MapGraph\r\n\r\n\tstatic resetGraph(graphMaker?: GraphMakerJSONStructure) {\r\n\t\tif (graphMaker) {\r\n\t\t\tObject.assign(graphState, graphMaker.graphState)\r\n\t\t\tif (this.map) this.map.destruct()\r\n\t\t\tthis.map = new MapGraph(graphMaker.pajek)\r\n\t\t} else {\r\n\t\t\tconst { nextSize } = graphState\r\n\t\t\tgraphState = new GraphState(nextSize - 1, graphState)\r\n\t\t\tif (this.map) this.map.destruct()\r\n\t\t\tthis.map = new MapGraph(nextSize)\r\n\t\t}\r\n\t\tgraphState.graphVersionUpdate++\r\n\t}\r\n\tstatic loadGraphFile(data: string) {\r\n\t\ttry {\r\n\t\t\tconst object = JSON.parse(data) as GraphMakerJSONStructure\r\n\t\t\tif (!object.graphState || !object.pajek) {\r\n\t\t\t\tthrow new Error('Data not valid for Graph Maker')\r\n\t\t\t}\r\n\t\t\tthis.resetGraph(object)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\tstatic resizeCanvas() {\r\n\t\tconst { offsetHeight, offsetWidth } = document.getElementById('graph-container')!\r\n\t\tconst res = Math.min(offsetHeight, offsetWidth)\r\n\t\tfor (const canvas of GraphComponents.canvas) {\r\n\t\t\tcanvas.height = res\r\n\t\t\tcanvas.width = res\r\n\t\t}\r\n\t\tif (this.map) {\r\n\t\t\tthis.map.refreshScreen()\r\n\t\t}\r\n\t}\r\n\tstatic draw(event: MouseEvent) {\r\n\t\tthis.map[graphState.drawingMethod](event)\r\n\t}\r\n}\r\n\r\nexport class GraphComponents {\r\n\tstatic canvas = [] as HTMLCanvasElement[]\r\n\tstatic ctx = [] as CanvasRenderingContext2D[]\r\n\tstatic stateKeeper = new StateKeeper()\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Button } from '../button'\r\nimport { GraphController } from '../../../../controller/GraphController'\r\nimport { loadImagGraph } from '../../../../controller/ImageLoader'\r\n\r\nconst imagesSupported = ['PNG', 'JPG', 'JPEG']\r\n\r\nexport class ButtonReadFile extends Component {\r\n\tloadFile = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst [file] = event.target.files!\r\n\t\tif (!file) return\r\n\t\tconst extension = file.name.split('.').pop()\r\n\t\tif (!extension) return\r\n\t\tconst ext = extension.toUpperCase()\r\n\t\tconst reader = new FileReader()\r\n\t\tif (ext === 'JSON') {\r\n\t\t\treader.readAsText(file)\r\n\t\t\tawait new Promise(r => (reader.onload = r))\r\n\t\t\tGraphController.loadGraphFile(reader.result as string)\r\n\t\t} else if (imagesSupported.includes(ext)) {\r\n\t\t\treader.readAsDataURL(file)\r\n\t\t\tawait new Promise(r => (reader.onload = r))\r\n\t\t\tawait loadImagGraph(reader.result as string)\r\n\t\t}\r\n\t\tconst a = document.getElementById('file-selector') as HTMLInputElement\r\n\t\ta.value = ''\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='button-readfile-container'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='button-readfile'\r\n\t\t\t\t\tid='file-selector'\r\n\t\t\t\t\ttype='file'\r\n\t\t\t\t\tonChange={this.loadFile}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='file-selector'>\r\n\t\t\t\t\t<Button icon='folder_open' />\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Button } from './button'\r\nimport { Input } from './input'\r\nimport { AppLogo } from './appicon'\r\nimport { ButtonReadFile } from './readfile'\r\nimport { graphState, GraphComponents } from '../../../controller/GraphController'\r\nimport { isInBrowser } from '../../../controller/Utils'\r\n\r\nasync function getRemote() {\r\n\treturn (await import('electron')).remote\r\n}\r\n\r\ninterface Pops {\r\n\topenGraphSetup(): void\r\n}\r\nexport class TopBar extends Component<Pops> {\r\n\tcomponentDidMount() {\r\n\t\tgraphState.listen(this.update, ['graphName'])\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tgraphState.stopListen(this.update, ['graphName'])\r\n\t}\r\n\tupdate = () => {\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\tsaveFile = () => {\r\n\t\tconst file = new Blob([GraphComponents.stateKeeper.graphToString()], { type: 'txt' })\r\n\t\tconst filename = (graphState.graphName || 'Graph Maker') + '.json'\r\n\t\tconst a = document.createElement('a')\r\n\t\tconst url = URL.createObjectURL(file)\r\n\t\tif (window.navigator.msSaveOrOpenBlob) {\r\n\t\t\twindow.navigator.msSaveOrOpenBlob(file, filename)\r\n\t\t\treturn\r\n\t\t}\r\n\t\ta.href = url\r\n\t\ta.download = filename\r\n\t\ta.click()\r\n\t\twindow.URL.revokeObjectURL(url)\r\n\t}\r\n\tasync minimize() {\r\n\t\tconst remote = await getRemote()\r\n\t\tremote.getCurrentWindow().minimize()\r\n\t}\r\n\tasync close() {\r\n\t\tconst remote = await getRemote()\r\n\t\tremote.getCurrentWindow().close()\r\n\t}\r\n\tasync fullscreen() {\r\n\t\tconst remote = await getRemote()\r\n\t\tconst win = remote.getCurrentWindow()\r\n\t\tconst isFullscreen = win.isFullScreen()\r\n\t\twin.setFullScreen(!isFullscreen)\r\n\t}\r\n\topenGitHub = () => {\r\n\t\twindow.open('https://github.com/Guilherme8482/graph-maker')\r\n\t}\r\n\telectronWindowActions() {\r\n\t\tconst buttons = [<Button key={0} icon='info_outline' onClick={this.openGitHub} />]\r\n\t\tif (!isInBrowser) {\r\n\t\t\tbuttons.push(\r\n\t\t\t\t<Button key={1} icon='remove' onClick={this.minimize} />,\r\n\t\t\t\t<Button key={2} icon='crop_square' onClick={this.fullscreen} />,\r\n\t\t\t\t<Button key={3} icon='close' onClick={this.close} />,\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn <div className='topbar-right'>{buttons}</div>\r\n\t}\r\n\trender() {\r\n\t\tconst { openGraphSetup } = this.props\r\n\t\tconst { graphName } = graphState\r\n\t\treturn (\r\n\t\t\t<div className='topbar-container'>\r\n\t\t\t\t<div className='topbar-left'>\r\n\t\t\t\t\t<AppLogo />\r\n\t\t\t\t\t<div className='topbar-title'>Graph maker</div>\r\n\t\t\t\t\t<span title='New graph map'>\r\n\t\t\t\t\t\t<Button icon='insert_drive_file' onClick={openGraphSetup} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span title='Open images or graph.json'>\r\n\t\t\t\t\t\t<ButtonReadFile />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span title='Save graph map'>\r\n\t\t\t\t\t\t<Button icon='save' onClick={this.saveFile} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tplaceholder='Choose a name'\r\n\t\t\t\t\t\tvalue={graphName}\r\n\t\t\t\t\t\tonChange={e => (graphState.graphName = e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.electronWindowActions()}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\tlabel: string\r\n\tonClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\r\n}\r\nexport class Button extends Component<Props> {\r\n\trender() {\r\n\t\tconst { label, onClick } = this.props\r\n\t\treturn (\r\n\t\t\t<div onClick={onClick}>\r\n\t\t\t\t<button className='sidebar-button'>{label}</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\tlabel: string\r\n\tvalue: number\r\n}\r\nexport class InfoField extends Component<Props> {\r\n\trender() {\r\n\t\tconst { value, label } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='datafield-result-container'>\r\n\t\t\t\t<div className='datafield-result-title'>{label}</div>\r\n\t\t\t\t<div className='datafield-result'>{value === -1 ? '∞' : value}</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { intensity } from '../../../../graph/MapGraph'\r\n\r\ninterface Props {\r\n\tclassName?: string\r\n\tlabel: string\r\n\tvalue: number\r\n\tonChange: (event: number) => void\r\n}\r\nexport class SlideBar extends Component<Props> {\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps: Readonly<Props>) {\r\n\t\tconst { value } = nextProps\r\n\t\tthis.setState({ value })\r\n\t}\r\n\tnormaliaze(value: number) {\r\n\t\tif (value > intensity.max) value = intensity.max\r\n\t\tif (value < intensity.min) value = intensity.min\r\n\t\treturn value\r\n\t}\r\n\tsetValue = (value: number) => {\r\n\t\tthis.setState({ value })\r\n\t\tthis.props.onChange(value)\r\n\t}\r\n\tinputOnKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tlet { value } = this.state\r\n\t\tif (event.key === 'ArrowUp') value++\r\n\t\telse if (event.key === 'ArrowDown') value--\r\n\t\telse return\r\n\t\tthis.setValue(this.normaliaze(value))\r\n\t}\r\n\tinputOnValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tlet value = Number(event.currentTarget.value.replace(/\\D/g, ''))\r\n\t\tthis.setValue(this.normaliaze(value))\r\n\t}\r\n\trender() {\r\n\t\tconst { className, label } = this.props\r\n\t\tconst { value } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={`sidebar-slidebar-container ${className}`}>\r\n\t\t\t\t<div className='sidebar-slidebar-title'>{label}:</div>\r\n\t\t\t\t<div className='sidebar-slidebar-slidecontainer'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='sidebar-slidebar'\r\n\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\tmin={intensity.min}\r\n\t\t\t\t\t\tmax={intensity.max}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tonChange={e => this.setValue(Number(e.target.value))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='sidebar-slidebar-numberfield'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tmin={intensity.min}\r\n\t\t\t\t\t\tmax={intensity.max}\r\n\t\t\t\t\t\tvalue={value === intensity.max ? '∞' : value}\r\n\t\t\t\t\t\tonKeyDown={this.inputOnKeyPress}\r\n\t\t\t\t\t\tonChange={this.inputOnValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props<T extends string> {\r\n\tlabel: string\r\n\toptions: T[]\r\n\toptionLabels?: string[]\r\n\tselected: T\r\n\tonChange?(option: T): void\r\n}\r\nexport class SlideSelect<T extends string> extends Component<Props<T>> {\r\n\tstate = {\r\n\t\tselected: 0,\r\n\t\tclicked: false,\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps: Readonly<Props<T>>) {\r\n\t\tconst { selected, options } = nextProps\r\n\t\tthis.setState({ selected: options.indexOf(selected) })\r\n\t}\r\n\tonMouseMove = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n\t\tif (!this.state.clicked) return\r\n\t\tconst selected = 0 | ((event.pageY - event.currentTarget.getBoundingClientRect().top) / 30)\r\n\t\tif (\r\n\t\t\tselected === this.state.selected ||\r\n\t\t\tselected < 0 ||\r\n\t\t\tselected >= this.props.options.length\r\n\t\t)\r\n\t\t\treturn\r\n\t\tthis.setState({ selected })\r\n\t\tconst { onChange, options } = this.props\r\n\t\tif (onChange) onChange(options[selected])\r\n\t}\r\n\tchangeSelectedListeners = {} as { [i: string]: () => void }\r\n\tchangeSelected(selected: T) {\r\n\t\tconst listener = this.changeSelectedListeners[selected]\r\n\t\tif (listener) return listener\r\n\t\treturn (this.changeSelectedListeners[selected] = () => {\r\n\t\t\tconst { options, onChange } = this.props\r\n\t\t\tthis.setState({ selected: options.indexOf(selected) })\r\n\t\t\tif (onChange) onChange(selected)\r\n\t\t})\r\n\t}\r\n\tsetClicked = () => {\r\n\t\tthis.setState({ clicked: true })\r\n\t}\r\n\tsetNotClicked = () => {\r\n\t\tthis.setState({ clicked: false })\r\n\t}\r\n\trender() {\r\n\t\tconst { label, options, optionLabels } = this.props\r\n\t\tconst { selected } = this.state\r\n\t\tconst labels = optionLabels || options\r\n\t\treturn (\r\n\t\t\t<div className='slideselect-container'>\r\n\t\t\t\t<div className='slideselect-title'>{label}:</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tonMouseDown={this.setClicked}\r\n\t\t\t\t\tonMouseUp={this.setNotClicked}\r\n\t\t\t\t\tonMouseMove={this.onMouseMove}\r\n\t\t\t\t\tonMouseLeave={this.setNotClicked}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className='slideselect-options-container'>\r\n\t\t\t\t\t\t<div style={{ height: 0 }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='slideselect-selected'\r\n\t\t\t\t\t\t\t\tstyle={{ top: selected * 30 + 'px' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{options.map((o, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='slideselect-option'\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tonClick={this.changeSelected(o)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{labels[i]}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Button } from './button'\r\nimport { InfoField } from './infofield'\r\nimport { graphState, SearchMethod, DrawingMethod } from '../../../controller/GraphController'\r\nimport { SlideBar } from './slidebar'\r\nimport { GraphState } from '../../../controller/State'\r\nimport { SlideSelect } from './slideselect'\r\n\r\nconst searchMethods = Object.values(SearchMethod)\r\nconst searchMethodsLabels = ['Dijkstra', 'First Breadth', 'First Greedy', 'A*']\r\nconst drawingMethods = Object.values(DrawingMethod)\r\nconst drawingMethodsLabels = ['Start Point', 'End Point', 'Intensity Point']\r\nconst listenProps: (keyof GraphState)[] = [\r\n\t'searchMethod',\r\n\t'isSearchEnable',\r\n\t'drawingMethod',\r\n\t'pathSize',\r\n\t'pathCost',\r\n\t'numberVisisted',\r\n]\r\n\r\nexport class SideBar extends Component {\r\n\tcomponentDidMount() {\r\n\t\tgraphState.listen(this.update, listenProps)\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tgraphState.stopListen(this.update, listenProps)\r\n\t}\r\n\tupdate = () => {\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\tsetSearchMethod = (option: SearchMethod) => {\r\n\t\tgraphState.searchMethod = option\r\n\t}\r\n\tsetDrawingMethod = (option: DrawingMethod) => {\r\n\t\tgraphState.drawingMethod = option\r\n\t}\r\n\tfindPath = () => {\r\n\t\tgraphState.isSearchEnable = !graphState.isSearchEnable\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\tsetObstacleIntensity = (value: number) => {\r\n\t\tgraphState.obstacleIntensity = value\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tisSearchEnable,\r\n\t\t\tobstacleIntensity,\r\n\t\t\tpathSize,\r\n\t\t\tpathCost,\r\n\t\t\tnumberVisisted,\r\n\t\t\tsearchMethod,\r\n\t\t\tdrawingMethod,\r\n\t\t} = graphState\r\n\t\treturn (\r\n\t\t\t<div className='sidebar-container'>\r\n\t\t\t\t<div className='sidebar-subcontainer'>\r\n\t\t\t\t\t<div className='sidebar-title'>\r\n\t\t\t\t\t\t<span className='notranslate'>\r\n\t\t\t\t\t\t\t<i className='material-icons'>settings</i>\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<div className='sidebar-title-text'>Options</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SlideSelect\r\n\t\t\t\t\t\tlabel='Search mode'\r\n\t\t\t\t\t\toptions={searchMethods}\r\n\t\t\t\t\t\toptionLabels={searchMethodsLabels}\r\n\t\t\t\t\t\tselected={searchMethod}\r\n\t\t\t\t\t\tonChange={this.setSearchMethod}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button label={isSearchEnable ? 'Stop' : 'Find'} onClick={this.findPath} />\r\n\t\t\t\t\t<SlideSelect\r\n\t\t\t\t\t\tlabel='Drawing mode'\r\n\t\t\t\t\t\toptions={drawingMethods}\r\n\t\t\t\t\t\toptionLabels={drawingMethodsLabels}\r\n\t\t\t\t\t\tselected={drawingMethod}\r\n\t\t\t\t\t\tonChange={this.setDrawingMethod}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SlideBar\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tdrawingMethod === DrawingMethod.Obstacle ? '' : 'sidebar-slidebar-hide'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel='Obstacle intensity'\r\n\t\t\t\t\t\tvalue={obstacleIntensity}\r\n\t\t\t\t\t\tonChange={this.setObstacleIntensity}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoField label='Path size' value={pathSize} />\r\n\t\t\t\t\t<InfoField label='Path cost' value={pathCost} />\r\n\t\t\t\t\t<InfoField label='Number of visisted' value={numberVisisted} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { GraphComponents, GraphController } from '../../../controller/GraphController'\r\n\r\nexport class Graph extends Component {\r\n\tstate = {\r\n\t\tisClicked: false,\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { children } = document.getElementById('graph-container')!\r\n\t\tif (!children) return\r\n\t\tconst canvas = [0, 1, 2].map(i => children.item(i)!)\r\n\t\tGraphComponents.canvas = canvas as HTMLCanvasElement[]\r\n\t\tGraphComponents.ctx = GraphComponents.canvas.map(c => c.getContext('2d')!)\r\n\t\tGraphController.resizeCanvas()\r\n\t\twindow.addEventListener('resize', () => GraphController.resizeCanvas())\r\n\t\tconst sucess = await GraphComponents.stateKeeper.restore()\r\n\t\tif (!sucess) GraphController.resetGraph()\r\n\t}\r\n\tsetClick = (isClicked: boolean) => {\r\n\t\tthis.setState({ isClicked })\r\n\t}\r\n\tonMouseMove = (event: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n\t\tif (this.state.isClicked) {\r\n\t\t\tGraphController.draw(event.nativeEvent)\r\n\t\t}\r\n\t}\r\n\tonClick = (event: React.MouseEvent<HTMLCanvasElement, MouseEvent>) => {\r\n\t\tGraphController.draw(event.nativeEvent)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='graph-container' id='graph-container'>\r\n\t\t\t\t<canvas className='graph-canvas'/>\r\n\t\t\t\t<canvas className='graph-canvas'/>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tclassName='graph-canvas'\r\n\t\t\t\t\tonMouseDown={() => this.setClick(true)}\r\n\t\t\t\t\tonMouseUp={() => this.setClick(false)}\r\n\t\t\t\t\tonMouseMove={this.onMouseMove}\r\n\t\t\t\t\tonClick={this.onClick}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { TopBar } from './topbar'\r\nimport { SideBar } from './sidebar'\r\nimport { Graph } from './graph'\r\n\r\ninterface Props {\r\n\topenGraphSetup: () => void\r\n}\r\nexport class Home extends Component<Props> {\r\n\trender() {\r\n\t\tconst { openGraphSetup } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='main-container'>\r\n\t\t\t\t<div className='main-topbar'>\r\n\t\t\t\t\t<TopBar openGraphSetup={openGraphSetup} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='main-midcontent'>\r\n\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t<Graph />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Button } from '../../home/topbar/button'\r\nimport { AppLogo } from '../../home/topbar/appicon'\r\n\r\ninterface Props {\r\n\tcloseGraphSetup: () => void\r\n}\r\nexport class TopBar extends Component<Props> {\r\n\trender() {\r\n\t\tconst { closeGraphSetup } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='topbar-container topbar-handler'>\r\n\t\t\t\t<div className='topbar-left'>\r\n\t\t\t\t\t<AppLogo />\r\n\t\t\t\t\t<div className='topbar-title'>Graph maker</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='topbar-right'>\r\n\t\t\t\t\t<Button icon='close' onClick={closeGraphSetup} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Button } from '../../home/topbar/button'\r\nimport { GraphController } from '../../../controller/GraphController'\r\n\r\ninterface Props {\r\n\tcloseSetupGraph: () => void\r\n}\r\nexport class BottomBar extends Component<Props> {\r\n\tconfirm = () => {\r\n\t\tGraphController.resetGraph()\r\n\t\tthis.props.closeSetupGraph()\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='botbar-container'>\r\n\t\t\t\t<div className='botbar-left'/>\r\n\t\t\t\t<div className='botbar-right'>\r\n\t\t\t\t\t<Button icon='arrow_forward' onClick={this.confirm} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { graphState, GraphController } from '../../../../controller/GraphController'\r\nimport { GRAPH_MAX_SIZE } from '../../../../graph/Graph'\r\n\r\nconst { round, sqrt } = Math\r\n\r\ninterface Props {\r\n\tlabel: string\r\n\tdefaultValue: number\r\n\tonEnter(): void\r\n}\r\nexport class SquareRootInput extends Component<Props> {\r\n\tstate: { value: number }\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.defaultValue,\r\n\t\t}\r\n\t}\r\n\tnormalizeSize(size: number) {\r\n\t\tif (size ** 2 > GRAPH_MAX_SIZE) size = sqrt(GRAPH_MAX_SIZE)\r\n\t\tconst value = round(sqrt(size)) ** 2\r\n\t\tthis.setState({ value })\r\n\t\tgraphState.nextSize = value\r\n\t}\r\n\tonBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst size = Number(event.target.value)\r\n\t\tthis.normalizeSize(size)\r\n\t}\r\n\tonChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = Number(event.target.value)\r\n\t\tthis.setState({ value })\r\n\t}\r\n\tonKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tthis.normalizeSize(this.state.value)\r\n\t\t\tGraphController.resetGraph()\r\n\t\t\tthis.props.onEnter()\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='input-container'>\r\n\t\t\t\t<b>{this.props.label}:</b>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tclassName='squarerootinput-size'\r\n\t\t\t\t\tmin={9}\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonBlur={this.onBlur}\r\n\t\t\t\t\tonKeyDown={this.onKeyPress}\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\n\r\ninterface Props {\r\n\tmessage: string\r\n}\r\nexport class Warning extends Component<Props> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className='warning'>{this.props.message}</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { SquareRootInput } from './input'\r\nimport { Warning } from './warning'\r\nimport { graphState } from '../../../controller/GraphController'\r\n\r\ninterface Props {\r\n\tonEnter(): void\r\n}\r\nexport class MiddleData extends Component<Props> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='middle-container'>\r\n\t\t\t\t<div className='middle-subcontainer'>\r\n\t\t\t\t\t<SquareRootInput\r\n\t\t\t\t\t\tlabel='Size'\r\n\t\t\t\t\t\tdefaultValue={graphState.nextSize}\r\n\t\t\t\t\t\tonEnter={this.props.onEnter}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Warning message='Size value must be a square root valid' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { TopBar } from './topbar'\r\nimport { BottomBar } from './bottombar'\r\nimport { MiddleData } from './middledata'\r\nimport Draggable from 'react-draggable'\r\n\r\ninterface Props {\r\n\tcloseSetupGraph: () => void\r\n}\r\nexport class SetupGraph extends Component<Props> {\r\n\trender() {\r\n\t\tconst { closeSetupGraph } = this.props\r\n\t\treturn (\r\n\t\t\t<Draggable handle='.topbar-handler'>\r\n\t\t\t\t<div className='setupgraph-container'>\r\n\t\t\t\t\t<div className='topbar'>\r\n\t\t\t\t\t\t<TopBar closeGraphSetup={closeSetupGraph} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='middledata'>\r\n\t\t\t\t\t\t<MiddleData onEnter={closeSetupGraph} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='bottombar'>\r\n\t\t\t\t\t\t<BottomBar closeSetupGraph={closeSetupGraph} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Draggable>\r\n\t\t)\r\n\t}\r\n}\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Home } from './home'\r\nimport { SetupGraph } from './setupgraph'\r\n\r\nexport class Main extends Component {\r\n\tstate = {\r\n\t\tisSetupVisible: false,\r\n\t}\r\n\tsetVisibleSetupGraph = (isSetupVisible: boolean) => {\r\n\t\tthis.setState({ isSetupVisible })\r\n\t}\r\n\tgetSetupGraph() {\r\n\t\tif (!this.state.isSetupVisible) return <div />\r\n\t\treturn (\r\n\t\t\t<div className='float-container'>\r\n\t\t\t\t<SetupGraph closeSetupGraph={() => this.setVisibleSetupGraph(false)} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='main-container'>\r\n\t\t\t\t<Home openGraphSetup={() => this.setVisibleSetupGraph(true)} />\r\n\t\t\t\t{this.getSetupGraph()}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Main } from './pages'\r\n\r\ndocument.addEventListener('contextmenu', event => event.preventDefault())\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'))\r\n\r\nconsole.log(process.env)\r\n"],"sourceRoot":""}